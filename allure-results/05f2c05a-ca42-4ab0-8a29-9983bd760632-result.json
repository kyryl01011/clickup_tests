{"name": "test_negative_login", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Page.wait_for_selector: Target page, context or browser has been closed\nCall log:\n  - waiting for locator(\"cu3-icon\").locator(\"svg\").locator(\"use\") to be visible", "trace": "browser = <Browser type=<BrowserType name=chromium executable_path=C:\\Users\\apacha1\\AppData\\Local\\ms-playwright\\chromium-1161\\chrome-win\\chrome.exe> version=134.0.6998.35>\n\n    @allure.feature('Test negative UI login expecting error to appear')\n    def test_negative_login(browser):\n        username = 'cornybestgags@gmail.com'\n        password = '123qwe'\n        page = browser.new_page()\n        login_page = LoginPage(page)\n>       login_page.login(username, password)\n\ntests\\ui\\test_login_page.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:21: in login\n    self.wait_element_appear(self.DROPDOWN_USER_MENU_SELECTOR)\npages\\base_page.py:33: in wait_element_appear\n    self.page.wait_for_selector(selector)\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:8183: in wait_for_selector\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_page.py:425: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000001B1097BF890>, cb = <function Channel.send.<locals>.<lambda> at 0x000001B109B32200>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Page.wait_for_selector: Target page, context or browser has been closed\nE           Call log:\nE             - waiting for locator(\"cu3-icon\").locator(\"svg\").locator(\"use\") to be visible\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TargetClosedError"}, "steps": [{"name": "Load URL - {url}", "status": "passed", "start": 1745053947038, "stop": 1745053981429}, {"name": "Fill {selector} with \"{text}\"", "status": "passed", "start": 1745053981429, "stop": 1745053983368}, {"name": "Type in {selector} with \"{text}\"", "status": "passed", "start": 1745053983368, "stop": 1745053984504}, {"name": "Click element with selector \"{selector}\"", "status": "passed", "start": 1745053984504, "stop": 1745053985748}, {"name": "Wait element \"{selector}\" to appear", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Page.wait_for_selector: Target page, context or browser has been closed\nCall log:\n  - waiting for locator(\"cu3-icon\").locator(\"svg\").locator(\"use\") to be visible\n\n", "trace": "  File \"C:\\Apps\\clickup_tests\\pages\\base_page.py\", line 33, in wait_element_appear\n    self.page.wait_for_selector(selector)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Apps\\clickup_tests\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 8183, in wait_for_selector\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.wait_for_selector(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            selector=selector, timeout=timeout, state=state, strict=strict\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Apps\\clickup_tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Apps\\clickup_tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_page.py\", line 425, in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Apps\\clickup_tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 323, in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n  File \"C:\\Apps\\clickup_tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n    )\n    ^\n  File \"C:\\Apps\\clickup_tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1745053985748, "stop": 1745054012739}], "start": 1745053946790, "stop": 1745054012743, "uuid": "dc7e3232-f6aa-4551-ad1d-d9dbf5eb0244", "historyId": "e87bd65a3cb2ec7fe3812cad558724e0", "testCaseId": "e87bd65a3cb2ec7fe3812cad558724e0", "fullName": "tests.ui.test_login_page#test_negative_login", "labels": [{"name": "feature", "value": "Test negative UI login expecting error to appear"}, {"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "test_login_page"}, {"name": "host", "value": "apachai"}, {"name": "thread", "value": "22804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.test_login_page"}]}